name: Build and Deploy API

on:
  push:
    branches: [ main, master ]
    paths:
      - 'notematic-api/**'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if tests fail'
        required: false
        default: false
        type: boolean

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build API
      working-directory: .
      run: |
        cargo build --release

    - name: Run tests
      working-directory: .
      run: cargo test
      continue-on-error: ${{ github.event.inputs.force_deploy == 'true' }}

    - name: Create release package
      working-directory: .
      run: |
        mkdir -p release
        cp target/release/notematic-api release/
        cp Cargo.toml release/
        cp -r src release/
        tar -czf notematic-api.tar.gz release/

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: notematic-api-build
        path: notematic-api.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: |
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') ||
      github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: notematic-api-build

    - name: Copy to server
      uses: appleboy/scp-action@v0.1.8
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        source: "notematic-api.tar.gz"
        target: "/tmp/"

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.2.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # Configuration
          APP_DIR="/opt/notematic-api"
          SERVICE_NAME="notematic-api"
          
          echo "Starting deployment..."
          
          # Create backup of current version
          if [ -f "$APP_DIR/notematic-api" ]; then
              echo "Creating backup..."
              cp "$APP_DIR/notematic-api" "$APP_DIR/notematic-api.backup.$(date +%Y%m%d_%H%M%S)"
          fi
          
          # Stop service if running
          echo "Stopping service..."
          systemctl stop "$SERVICE_NAME" || echo "Service was not running"
          
          # Create directory and extract
          echo "Extracting new version..."
          mkdir -p "$APP_DIR"
          cd "$APP_DIR"
          tar -xzf /tmp/notematic-api.tar.gz
          cp release/notematic-api .
          chmod +x notematic-api
          
          # Create systemd service
          echo "Setting up service..."
          cat > /etc/systemd/system/"$SERVICE_NAME".service << EOF
          [Unit]
          Description=Notematic API
          After=network.target
          
          [Service]
          Type=simple
          User=root
          WorkingDirectory=$APP_DIR
          ExecStart=$APP_DIR/notematic-api
          Restart=always
          RestartSec=5
          Environment=RUST_LOG=info
          Environment=API_PORT=8080
          Environment=RUST_ENV=production
          
          [Install]
          WantedBy=multi-user.target
          EOF
          
          # Start service
          echo "Starting service..."
          systemctl daemon-reload
          systemctl enable "$SERVICE_NAME"
          systemctl start "$SERVICE_NAME"
          
          # Cleanup
          rm -rf release
          rm -f /tmp/notematic-api.tar.gz
          
          echo "Deployment completed!"
          
          # Show status
          systemctl status "$SERVICE_NAME" --no-pager -l 